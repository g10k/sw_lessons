# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-14 19:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=100, verbose_name='Логин')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=40, null=True, verbose_name='Фамилия')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('pub_date', models.DateTimeField(verbose_name='Дата создания')),
                ('modify_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата модификации')),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Автор', to='blog.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=30, verbose_name='Название тега')),
                ('tag_detail', models.CharField(max_length=255, verbose_name='Краткое описание тега')),
            ],
        ),
        migrations.AddField(
            model_name='record',
            name='tags',
            field=models.ManyToManyField(related_name='Теги', to='blog.Tag'),
        ),
    ]
